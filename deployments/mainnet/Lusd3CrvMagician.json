{
  "address": "0x4166487056A922D784b073d4d928a516B074b719",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lusd3CrvPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_crv3Pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tricrypto2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lusd",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdt",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_crv3Lp",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EmptyAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unsupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CRV3LP_INDEX_LUSD3CRV_POOL",
      "outputs": [
        {
          "internalType": "int128",
          "name": "",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CRV3_POOL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CRV_3_LP",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LUSD",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LUSD_3CRV_POOL",
      "outputs": [
        {
          "internalType": "contract ICurvePoolLike128WithReturn",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LUSD_INDEX_LUSD3CRV_POOL",
      "outputs": [
        {
          "internalType": "int128",
          "name": "",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRICTYPTO_2_POOL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNKNOWN_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDT",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "towardsAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "towardsNative",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2d5c723af00389cc358b8e9a8504c23085de5ab3ba024c4403536694847a7523",
  "receipt": {
    "to": null,
    "from": "0x9c3832dB9F3c1375aA3542C55F6EE9B54F38D944",
    "contractAddress": "0x4166487056A922D784b073d4d928a516B074b719",
    "transactionIndex": 45,
    "gasUsed": "642038",
    "logsBloom": "0x
    "blockHash": "0xb5143f222e3d23747aed28fe0fcb4cc7e323e046038c7b3fb53ce4b624a52359",
    "transactionHash": "0x2d5c723af00389cc358b8e9a8504c23085de5ab3ba024c4403536694847a7523",
    "logs": [],
    "blockNumber": 17391884,
    "cumulativeGasUsed": "4926492",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xEd279fDD11cA84bEef15AF5D39BB4d4bEE23F0cA",
    "0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7",
    "0xD51a44d3FaE010294C616388b506AcdA1bfAAE46",
    "0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",
    "0xdac17f958d2ee523a2206206994597c13d831ec7",
    "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
    "0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"
  ],
  "numDeployments": 1,
  "solcInputHash": "c9303397e20c2b4613b58e6ec221d180",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lusd3CrvPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_crv3Pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tricrypto2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lusd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_crv3Lp\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EmptyAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unsupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CRV3LP_INDEX_LUSD3CRV_POOL\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CRV3_POOL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CRV_3_LP\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LUSD\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LUSD_3CRV_POOL\",\"outputs\":[{\"internalType\":\"contract ICurvePoolLike128WithReturn\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LUSD_INDEX_LUSD3CRV_POOL\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRICTYPTO_2_POOL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNKNOWN_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"towardsAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"towardsNative\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Curve LP Tokens unwrapping IT IS NOT PART OF THE PROTOCOL. SILO CREATED THIS TOOL, MOSTLY AS AN EXAMPLE.\",\"errors\":{\"EmptyAddress()\":[{\"details\":\"Revert in the constructor if provided an empty address\"}],\"Unsupported()\":[{\"details\":\"Revert on a `towardsAsset` call as it in unsupported \"}]},\"kind\":\"dev\",\"methods\":{\"towardsAsset(address,uint256)\":{\"details\":\"As Curve LP Tokens can be collateral-only assets we skip the implementation of this function\"},\"towardsNative(address,uint256)\":{\"params\":{\"_amount\":\"Amount of the `_asset`\",\"_asset\":\"Asset to be unwrapped\"},\"returns\":{\"amountOut\":\"Amount of the `tokenOut` that we received\",\"tokenOut\":\"A token that the `_asset` has been converted to\"}}},\"stateVariables\":{\"CRV3LP_INDEX_LUSD3CRV_POOL\":{\"details\":\"Index value for the coin (curve LUSD/3CRV pool)\"},\"LUSD_INDEX_LUSD3CRV_POOL\":{\"details\":\"Index value for the coin (curve LUSD/3CRV pool)\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"towardsNative(address,uint256)\":{\"notice\":\"Operates to unwrap an `_asset`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/liquidation/magicians/curveLPTokens/pools/Lusd3CrvMagician.sol\":\"Lusd3CrvMagician\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"contracts/liquidation/magicians/_common/libraries/LusdUsdtAsUnderlying.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../../interfaces/ICurvePoolLike128WithReturn.sol\\\";\\n\\n/// @dev Curve pool exchange\\n/// IT IS NOT PART OF THE PROTOCOL. SILO CREATED THIS TOOL, MOSTLY AS AN EXAMPLE.\\nlibrary LusdUsdtAsUnderlying {\\n    /// @dev Index value for the coin (curve LUSD/3CRV pool)\\n    int128 public constant LUSD_INDEX_LUSD3CRV_POOL = 0;\\n    /// @dev Index value for the USDT as an underlying asset (curve LUSD/3CRV pool)\\n    int128 constant public USDT_INDEX = 3;\\n\\n    uint256 constant public UNKNOWN_AMOUNT = 1;\\n\\n    function lusdToUsdtViaCurve(uint256 _amount, address _pool, IERC20 _lusd) internal returns (uint256) {\\n        _lusd.approve(_pool, _amount);\\n\\n        return ICurvePoolLike128WithReturn(_pool).exchange_underlying(\\n            LUSD_INDEX_LUSD3CRV_POOL,\\n            USDT_INDEX,\\n            _amount,\\n            UNKNOWN_AMOUNT\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xc095d46cd4f46a42273da582c604002033319251f0b18c6cfc40097d316630d6\",\"license\":\"MIT\"},\"contracts/liquidation/magicians/_common/libraries/UsdtWethTricrypto2Lib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"../../interfaces/ICurvePoolLike256.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// @dev Curve pool exchange\\n/// IT IS NOT PART OF THE PROTOCOL. SILO CREATED THIS TOOL, MOSTLY AS AN EXAMPLE.\\nlibrary UsdtWethTricrypto2Lib {\\n    using SafeERC20 for IERC20;\\n\\n    uint256 constant public USDT_INDEX = 0;\\n    uint256 constant public WETH_INDEX = 2;\\n\\n    uint256 constant public UNKNOWN_AMOUNT = 1;\\n\\n    function usdtToWethTricrypto2(\\n        uint256 _amount,\\n        address _pool,\\n        IERC20 _usdt,\\n        IERC20 _weth\\n    )\\n        internal\\n        returns (uint256 _received)\\n    {\\n        _usdt.safeApprove(_pool, _amount);\\n\\n        uint256 balanceBefore = _weth.balanceOf(address(this));\\n\\n        ICurvePoolLike256(_pool).exchange(\\n            USDT_INDEX,\\n            WETH_INDEX,\\n            _amount,\\n            UNKNOWN_AMOUNT\\n        );\\n\\n        uint256 balanceAfter = _weth.balanceOf(address(this));\\n\\n        // The `balanceAfter` can't be less than the `balanceBefore` after the exchange\\n        unchecked { _received = balanceAfter - balanceBefore; }\\n    }\\n}\\n\",\"keccak256\":\"0xf58538dc78884b4d6c1d3b795262dbf2fb4203708d8146371db0719d4a07d504\",\"license\":\"MIT\"},\"contracts/liquidation/magicians/curveLPTokens/pools/Lusd3CrvMagician.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../../_common/libraries/LusdUsdtAsUnderlying.sol\\\";\\nimport \\\"../../_common/libraries/UsdtWethTricrypto2Lib.sol\\\";\\nimport \\\"../../interfaces/IMagician.sol\\\";\\n\\n/// @dev Curve LP Tokens unwrapping\\n/// IT IS NOT PART OF THE PROTOCOL. SILO CREATED THIS TOOL, MOSTLY AS AN EXAMPLE.\\ncontract Lusd3CrvMagician is IMagician {\\n    using LusdUsdtAsUnderlying for uint256;\\n    using UsdtWethTricrypto2Lib for uint256;\\n\\n    /// @dev Index value for the coin (curve LUSD/3CRV pool)\\n    int128 public constant LUSD_INDEX_LUSD3CRV_POOL = 0;\\n    /// @dev Index value for the coin (curve LUSD/3CRV pool)\\n    int128 public constant CRV3LP_INDEX_LUSD3CRV_POOL = 1;\\n\\n    uint256 constant public UNKNOWN_AMOUNT = 1;\\n\\n    // solhint-disable var-name-mixedcase\\n    ICurvePoolLike128WithReturn public immutable LUSD_3CRV_POOL;\\n    address public immutable CRV3_POOL;\\n    address public immutable TRICTYPTO_2_POOL;\\n\\n    IERC20 public immutable CRV_3_LP;\\n    IERC20 public immutable LUSD;\\n    IERC20 public immutable USDT;\\n    IERC20 public immutable WETH;\\n    // solhint-enable var-name-mixedcase\\n\\n    /// @dev Revert on a `towardsAsset` call as it in unsupported \\n    error Unsupported();\\n    /// @dev Revert in the constructor if provided an empty address\\n    error EmptyAddress();\\n\\n    // solhint-disable-next-line code-complexity\\n    constructor(\\n        address _lusd3CrvPool,\\n        address _crv3Pool,\\n        address _tricrypto2,\\n        address _lusd,\\n        address _usdt,\\n        address _weth,\\n        address _crv3Lp\\n    ) {\\n        if (_lusd3CrvPool == address(0)) revert EmptyAddress();\\n        if (_crv3Pool == address(0)) revert EmptyAddress();\\n        if (_tricrypto2 == address(0)) revert EmptyAddress();\\n        if (_lusd == address(0)) revert EmptyAddress();\\n        if (_usdt == address(0)) revert EmptyAddress();\\n        if (_weth == address(0)) revert EmptyAddress();\\n        if (_crv3Lp == address(0)) revert EmptyAddress();\\n\\n        LUSD_3CRV_POOL = ICurvePoolLike128WithReturn(_lusd3CrvPool);\\n        CRV3_POOL = _crv3Pool;\\n        TRICTYPTO_2_POOL = _tricrypto2;\\n\\n        LUSD = IERC20(_lusd);\\n        USDT = IERC20(_usdt);\\n        WETH = IERC20(_weth);\\n        CRV_3_LP = IERC20(_crv3Lp);\\n    }\\n\\n    /// @dev As Curve LP Tokens can be collateral-only assets we skip the implementation of this function\\n    function towardsAsset(address, uint256) external virtual pure returns (address, uint256) {\\n        revert Unsupported();\\n    }\\n\\n    /// @inheritdoc IMagician\\n    function towardsNative(\\n        address,\\n        uint256 _amount\\n    )\\n        external\\n        virtual\\n        returns (address tokenOut, uint256 amountOut)\\n    {\\n        tokenOut = address(WETH);\\n\\n        amountOut = LUSD_3CRV_POOL\\n            .remove_liquidity_one_coin(\\n                _amount,\\n                LUSD_INDEX_LUSD3CRV_POOL,\\n                UNKNOWN_AMOUNT\\n            )\\n            .lusdToUsdtViaCurve(address(LUSD_3CRV_POOL), LUSD)\\n            .usdtToWethTricrypto2(TRICTYPTO_2_POOL, USDT, WETH);\\n    }\\n}\\n\",\"keccak256\":\"0xa0a03a89ae18d3ef1c6e4baa9b642dc7ae37a75de388296d8bce5aa07dbc79ca\",\"license\":\"MIT\"},\"contracts/liquidation/magicians/interfaces/ICurvePoolLike128WithReturn.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface ICurvePoolLike128WithReturn {\\n    // solhint-disable func-name-mixedcase\\n    function exchange(int128 i, int128 j, uint256 dx, uint256 minDy) external returns (uint256);\\n    function remove_liquidity_one_coin(uint256 amount, int128 i, uint256 minDy) external returns (uint256);\\n    function exchange_underlying(int128 _i, int128 _j, uint256 _dx, uint256 _minDy) external returns (uint256);\\n    function get_dy(int128 i, int128 j, uint256 dx) external view returns (uint256);\\n    // solhint-enable func-name-mixedcase\\n}\\n\",\"keccak256\":\"0x76678eaec7d80bcd814573eef3890219bc2b82e23c248730b3b3c686adb93f60\",\"license\":\"MIT\"},\"contracts/liquidation/magicians/interfaces/ICurvePoolLike256.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface ICurvePoolLike256 {\\n    // solhint-disable-next-line func-name-mixedcase\\n    function exchange(uint256 i, uint256 j, uint256 dx, uint256 minDy) external;\\n    // solhint-disable-next-line func-name-mixedcase\\n    function get_dy(uint256 i, uint256 j, uint256 dx) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x06bcebb8b70b015b2664e41603f53f4d99356383b6e99e242939d7a02525c917\",\"license\":\"MIT\"},\"contracts/liquidation/magicians/interfaces/IMagician.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.6 <0.9.0;\\n\\n/// @notice Extension for the Liquidation helper to support such operations as unwrapping\\ninterface IMagician {\\n    /// @notice Operates to unwrap an `_asset`\\n    /// @param _asset Asset to be unwrapped\\n    /// @param _amount Amount of the `_asset`\\n    /// @return tokenOut A token that the `_asset` has been converted to\\n    /// @return amountOut Amount of the `tokenOut` that we received\\n    function towardsNative(address _asset, uint256 _amount) external returns (address tokenOut, uint256 amountOut);\\n\\n    /// @notice Performs operation opposit to `towardsNative`\\n    /// @param _asset Asset to be wrapped\\n    /// @param _amount Amount of the `_asset`\\n    /// @return tokenOut A token that the `_asset` has been converted to\\n    /// @return amountOut Amount of the quote token that we spent to get `_amoun` of the `_asset`\\n    function towardsAsset(address _asset, uint256 _amount) external returns (address tokenOut, uint256 amountOut);\\n}\\n\",\"keccak256\":\"0xb48290785d1be3d5b1ed767ee628faa69ee7ded238de776d66b9e0795536ff50\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101606040523480156200001257600080fd5b5060405162000d2d38038062000d2d8339810160408190526200003591620001a1565b6001600160a01b0387166200005d57604051637138356f60e01b815260040160405180910390fd5b6001600160a01b0386166200008557604051637138356f60e01b815260040160405180910390fd5b6001600160a01b038516620000ad57604051637138356f60e01b815260040160405180910390fd5b6001600160a01b038416620000d557604051637138356f60e01b815260040160405180910390fd5b6001600160a01b038316620000fd57604051637138356f60e01b815260040160405180910390fd5b6001600160a01b0382166200012557604051637138356f60e01b815260040160405180910390fd5b6001600160a01b0381166200014d57604051637138356f60e01b815260040160405180910390fd5b6001600160a01b0396871660805294861660a05292851660c052908416610100528316610120528216610140521660e05262000236565b80516001600160a01b03811681146200019c57600080fd5b919050565b600080600080600080600060e0888a031215620001bd57600080fd5b620001c88862000184565b9650620001d86020890162000184565b9550620001e86040890162000184565b9450620001f86060890162000184565b9350620002086080890162000184565b92506200021860a0890162000184565b91506200022860c0890162000184565b905092959891949750929550565b60805160a05160c05160e051610100516101205161014051610a7a620002b3600039600081816101a501526102890152600081816101f301526102d101526000818161021a015261031b0152600060f20152600081816101cc01526102af0152600061024101526000818161017e01526102f90152610a7a6000f3fe608060405234801561001057600080fd5b50600436106100b25760003560e01c80638531cc9b116100715780638531cc9b14610179578063ad5c4648146101a0578063bc5ef467146101c7578063c54e44eb146101ee578063cf59d56314610215578063f878c8da1461023c57600080fd5b806173f4146100b75780631d4dab88146100d2578063200dfa45146100ed57806321ebbf011461012c5780636ea477da1461015e5780637d9149fc14610171575b600080fd5b6100bf600181565b6040519081526020015b60405180910390f35b6100da600181565b604051600f9190910b81526020016100c9565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c9565b61013f61013a366004610952565b610263565b604080516001600160a01b0390931683526020830191909152016100c9565b61013f61016c366004610952565b6103aa565b6100da600081565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b604051630d2680e960e11b815260048101829052600060248201819052600160448301527f0000000000000000000000000000000000000000000000000000000000000000916103a1907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908590610399907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b03831690631a4d01d2906064016020604051808303816000875af115801561036e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610392919061098a565b91906103c6565b9291906104c8565b90509250929050565b600080604051634851657960e11b815260040160405180910390fd5b60405163095ea7b360e01b81526001600160a01b038381166004830152602482018590526000919083169063095ea7b3906044016020604051808303816000875af1158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d91906109a3565b50604051635320bf6b60e11b8152600060048201526003602482015260448101859052600160648201526001600160a01b0384169063a6417ed6906084016020604051808303816000875af115801561049a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104be919061098a565b90505b9392505050565b60006104de6001600160a01b0384168587610634565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610525573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610549919061098a565b604051630b68372160e31b8152600060048201526002602482015260448101889052600160648201529091506001600160a01b03861690635b41b90890608401600060405180830381600087803b1580156105a357600080fd5b505af11580156105b7573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03861691506370a0823190602401602060405180830381865afa158015610602573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610626919061098a565b919091039695505050505050565b8015806106ae5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac919061098a565b155b61071e5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610770908490610775565b505050565b60006107ca826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108479092919063ffffffff16565b80519091501561077057808060200190518101906107e891906109a3565b6107705760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610715565b60606104be848460008585843b6108a05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610715565b600080866001600160a01b031685876040516108bc91906109f5565b60006040518083038185875af1925050503d80600081146108f9576040519150601f19603f3d011682016040523d82523d6000602084013e6108fe565b606091505b509150915061090e828286610919565b979650505050505050565b606083156109285750816104c1565b8251156109385782518084602001fd5b8160405162461bcd60e51b81526004016107159190610a11565b6000806040838503121561096557600080fd5b82356001600160a01b038116811461097c57600080fd5b946020939093013593505050565b60006020828403121561099c57600080fd5b5051919050565b6000602082840312156109b557600080fd5b815180151581146104c157600080fd5b60005b838110156109e05781810151838201526020016109c8565b838111156109ef576000848401525b50505050565b60008251610a078184602087016109c5565b9190910192915050565b6020815260008251806020840152610a308160408501602087016109c5565b601f01601f1916919091016040019291505056fea26469706673582212200ab82513a71d925555e1ad0d9c982f8a75485977aef038933435fb4a8dec64b864736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b25760003560e01c80638531cc9b116100715780638531cc9b14610179578063ad5c4648146101a0578063bc5ef467146101c7578063c54e44eb146101ee578063cf59d56314610215578063f878c8da1461023c57600080fd5b806173f4146100b75780631d4dab88146100d2578063200dfa45146100ed57806321ebbf011461012c5780636ea477da1461015e5780637d9149fc14610171575b600080fd5b6100bf600181565b6040519081526020015b60405180910390f35b6100da600181565b604051600f9190910b81526020016100c9565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c9565b61013f61013a366004610952565b610263565b604080516001600160a01b0390931683526020830191909152016100c9565b61013f61016c366004610952565b6103aa565b6100da600081565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b604051630d2680e960e11b815260048101829052600060248201819052600160448301527f0000000000000000000000000000000000000000000000000000000000000000916103a1907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908590610399907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b03831690631a4d01d2906064016020604051808303816000875af115801561036e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610392919061098a565b91906103c6565b9291906104c8565b90509250929050565b600080604051634851657960e11b815260040160405180910390fd5b60405163095ea7b360e01b81526001600160a01b038381166004830152602482018590526000919083169063095ea7b3906044016020604051808303816000875af1158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d91906109a3565b50604051635320bf6b60e11b8152600060048201526003602482015260448101859052600160648201526001600160a01b0384169063a6417ed6906084016020604051808303816000875af115801561049a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104be919061098a565b90505b9392505050565b60006104de6001600160a01b0384168587610634565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610525573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610549919061098a565b604051630b68372160e31b8152600060048201526002602482015260448101889052600160648201529091506001600160a01b03861690635b41b90890608401600060405180830381600087803b1580156105a357600080fd5b505af11580156105b7573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03861691506370a0823190602401602060405180830381865afa158015610602573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610626919061098a565b919091039695505050505050565b8015806106ae5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac919061098a565b155b61071e5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610770908490610775565b505050565b60006107ca826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108479092919063ffffffff16565b80519091501561077057808060200190518101906107e891906109a3565b6107705760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610715565b60606104be848460008585843b6108a05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610715565b600080866001600160a01b031685876040516108bc91906109f5565b60006040518083038185875af1925050503d80600081146108f9576040519150601f19603f3d011682016040523d82523d6000602084013e6108fe565b606091505b509150915061090e828286610919565b979650505050505050565b606083156109285750816104c1565b8251156109385782518084602001fd5b8160405162461bcd60e51b81526004016107159190610a11565b6000806040838503121561096557600080fd5b82356001600160a01b038116811461097c57600080fd5b946020939093013593505050565b60006020828403121561099c57600080fd5b5051919050565b6000602082840312156109b557600080fd5b815180151581146104c157600080fd5b60005b838110156109e05781810151838201526020016109c8565b838111156109ef576000848401525b50505050565b60008251610a078184602087016109c5565b9190910192915050565b6020815260008251806020840152610a308160408501602087016109c5565b601f01601f1916919091016040019291505056fea26469706673582212200ab82513a71d925555e1ad0d9c982f8a75485977aef038933435fb4a8dec64b864736f6c634300080d0033",
  "devdoc": {
    "details": "Curve LP Tokens unwrapping IT IS NOT PART OF THE PROTOCOL. SILO CREATED THIS TOOL, MOSTLY AS AN EXAMPLE.",
    "errors": {
      "EmptyAddress()": [
        {
          "details": "Revert in the constructor if provided an empty address"
        }
      ],
      "Unsupported()": [
        {
          "details": "Revert on a `towardsAsset` call as it in unsupported "
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "towardsAsset(address,uint256)": {
        "details": "As Curve LP Tokens can be collateral-only assets we skip the implementation of this function"
      },
      "towardsNative(address,uint256)": {
        "params": {
          "_amount": "Amount of the `_asset`",
          "_asset": "Asset to be unwrapped"
        },
        "returns": {
          "amountOut": "Amount of the `tokenOut` that we received",
          "tokenOut": "A token that the `_asset` has been converted to"
        }
      }
    },
    "stateVariables": {
      "CRV3LP_INDEX_LUSD3CRV_POOL": {
        "details": "Index value for the coin (curve LUSD/3CRV pool)"
      },
      "LUSD_INDEX_LUSD3CRV_POOL": {
        "details": "Index value for the coin (curve LUSD/3CRV pool)"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "towardsNative(address,uint256)": {
        "notice": "Operates to unwrap an `_asset`"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}