{
  "address": "0xba53D3a08fB8dd4309881B4E8a3bc386ea0DDb1f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPriceProvidersRepository",
          "name": "_priceProvidersRepository",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ohm",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gOhm",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AssetNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexFunctionNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAssetAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidOHMAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenIsNotAContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ASSET",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OHM",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OHM_INDEX_BASE_UNITS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "assetSupported",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gOhmPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "index",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceProviderPing",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceProvidersRepository",
      "outputs": [
        {
          "internalType": "contract IPriceProvidersRepository",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoteToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x669be48169fc19d900a4030de6738c2ccc289e8bc9ff52a35a37ce27c6779043",
  "receipt": {
    "to": null,
    "from": "0x9c3832dB9F3c1375aA3542C55F6EE9B54F38D944",
    "contractAddress": "0xba53D3a08fB8dd4309881B4E8a3bc386ea0DDb1f",
    "transactionIndex": 90,
    "gasUsed": "587617",
    "logsBloom": "0x
    "blockHash": "0x0bc336c8c843028b30a97eab8d3a47b92b2f5afc241a3ebaef3fa3a19394b7c9",
    "transactionHash": "0x669be48169fc19d900a4030de6738c2ccc289e8bc9ff52a35a37ce27c6779043",
    "logs": [],
    "blockNumber": 15975124,
    "cumulativeGasUsed": "6435078",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7C2ca9D502f2409BeceAfa68E97a176Ff805029F",
    "0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5",
    "0x0ab87046fBb341D058F17CBC4c1133F25a20a52f"
  ],
  "numDeployments": 2,
  "solcInputHash": "5991d896ab4ce2662e918494e4e3b960",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPriceProvidersRepository\",\"name\":\"_priceProvidersRepository\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ohm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gOhm\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AssetNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexFunctionNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAssetAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOHMAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenIsNotAContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ASSET\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OHM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OHM_INDEX_BASE_UNITS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"assetSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gOhmPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceProviderPing\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceProvidersRepository\",\"outputs\":[{\"internalType\":\"contract IPriceProvidersRepository\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@silo.finance\",\"kind\":\"dev\",\"methods\":{\"assetSupported(address)\":{\"params\":{\"_asset\":\"address of an asset\"}},\"constructor\":{\"details\":\"Inside constructor there is a check of gOHM address.\"},\"getPrice(address)\":{\"params\":{\"_asset\":\"address of an asset for which to read price\"},\"returns\":{\"gOhmPrice\":\"of asses with 18 decimals, throws when pool is not ready yet to provide price\"}},\"priceProviderPing()\":{\"details\":\"this can save us from simple human errors, in case we use invalid address but this should NOT be treated as security check\",\"returns\":{\"_0\":\"always true\"}}},\"stateVariables\":{\"OHM\":{\"details\":\"Original token, OHMv2.\"},\"OHM_INDEX_BASE_UNITS\":{\"details\":\"Base units for the rebase index value\"}},\"title\":\"GOHMPriceProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assetSupported(address)\":{\"notice\":\"Only ASSET token is supported, false otherwise.\"},\"getPrice(address)\":{\"notice\":\"Returns \\\"Time-Weighted Average Price\\\" for an asset. Calculates TWAP price for quote/asset. It unifies all tokens decimal to 18, examples: - if asses == quote it returns 1e18 - if asset is USDC and quote is ETH and ETH costs ~$3300 then it returns ~0.0003e18 WETH per 1 USDC\"},\"index()\":{\"notice\":\"Returns the current index of rebasing token per one wrapped token (total amount of rebases) in OHM_INDEX_BASE_UNITS\"},\"priceProviderPing()\":{\"notice\":\"Helper method that allows easily detects, if contract is PriceProvider\"},\"priceProvidersRepository()\":{\"notice\":\"PriceProvidersRepository address\"},\"quoteToken()\":{\"notice\":\"Token address which prices are quoted in. Must be the same as PriceProvidersRepository.quoteToken\"}},\"notice\":\"GOHMPriceProvider is the price provider for gOHM token. Price calculations depends on the price of OHMv2. Price providers repository must be ready to provide the OHMv2 price.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/priceProviders/gOHM/GOHMPriceProvider.sol\":\"GOHMPriceProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.7.6 <0.9.0;\\n\\n/// @title Common interface for Silo Price Providers\\ninterface IPriceProvider {\\n    /// @notice Returns \\\"Time-Weighted Average Price\\\" for an asset. Calculates TWAP price for quote/asset.\\n    /// It unifies all tokens decimal to 18, examples:\\n    /// - if asses == quote it returns 1e18\\n    /// - if asset is USDC and quote is ETH and ETH costs ~$3300 then it returns ~0.0003e18 WETH per 1 USDC\\n    /// @param _asset address of an asset for which to read price\\n    /// @return price of asses with 18 decimals, throws when pool is not ready yet to provide price\\n    function getPrice(address _asset) external view returns (uint256 price);\\n\\n    /// @dev Informs if PriceProvider is setup for asset. It does not means PriceProvider can provide price right away.\\n    /// Some providers implementations need time to \\\"build\\\" buffer for TWAP price,\\n    /// so price may not be available yet but this method will return true.\\n    /// @param _asset asset in question\\n    /// @return TRUE if asset has been setup, otherwise false\\n    function assetSupported(address _asset) external view returns (bool);\\n\\n    /// @notice Gets token address in which prices are quoted\\n    /// @return quoteToken address\\n    function quoteToken() external view returns (address);\\n\\n    /// @notice Helper method that allows easily detects, if contract is PriceProvider\\n    /// @dev this can save us from simple human errors, in case we use invalid address\\n    /// but this should NOT be treated as security check\\n    /// @return always true\\n    function priceProviderPing() external pure returns (bytes4);\\n}\\n\",\"keccak256\":\"0xe25259fe540647dd3945dbc8eff5f7ec789c6708b42e1d82c456d3e8c9082147\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPriceProvidersRepository.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.7.6 <0.9.0;\\n\\nimport \\\"./IPriceProvider.sol\\\";\\n\\ninterface IPriceProvidersRepository {\\n    /// @notice Emitted when price provider is added\\n    /// @param newPriceProvider new price provider address\\n    event NewPriceProvider(IPriceProvider indexed newPriceProvider);\\n\\n    /// @notice Emitted when price provider is removed\\n    /// @param priceProvider removed price provider address\\n    event PriceProviderRemoved(IPriceProvider indexed priceProvider);\\n\\n    /// @notice Emitted when asset is assigned to price provider\\n    /// @param asset assigned asset   address\\n    /// @param priceProvider price provider address\\n    event PriceProviderForAsset(address indexed asset, IPriceProvider indexed priceProvider);\\n\\n    /// @notice Register new price provider\\n    /// @param _priceProvider address of price provider\\n    function addPriceProvider(IPriceProvider _priceProvider) external;\\n\\n    /// @notice Unregister price provider\\n    /// @param _priceProvider address of price provider to be removed\\n    function removePriceProvider(IPriceProvider _priceProvider) external;\\n\\n    /// @notice Sets price provider for asset\\n    /// @dev Request for asset price is forwarded to the price provider assigned to that asset\\n    /// @param _asset address of an asset for which price provider will be used\\n    /// @param _priceProvider address of price provider\\n    function setPriceProviderForAsset(address _asset, IPriceProvider _priceProvider) external;\\n\\n    /// @notice Returns \\\"Time-Weighted Average Price\\\" for an asset\\n    /// @param _asset address of an asset for which to read price\\n    /// @return price TWAP price of a token with 18 decimals\\n    function getPrice(address _asset) external view returns (uint256 price);\\n\\n    /// @notice Gets price provider assigned to an asset\\n    /// @param _asset address of an asset for which to get price provider\\n    /// @return priceProvider address of price provider\\n    function priceProviders(address _asset) external view returns (IPriceProvider priceProvider);\\n\\n    /// @notice Gets token address in which prices are quoted\\n    /// @return quoteToken address\\n    function quoteToken() external view returns (address);\\n\\n    /// @notice Gets manager role address\\n    /// @return manager role address\\n    function manager() external view returns (address);\\n\\n    /// @notice Checks if providers are available for an asset\\n    /// @param _asset asset address to check\\n    /// @return returns TRUE if price feed is ready, otherwise false\\n    function providersReadyForAsset(address _asset) external view returns (bool);\\n\\n    /// @notice Returns true if address is a registered price provider\\n    /// @param _provider address of price provider to be removed\\n    /// @return true if address is a registered price provider, otherwise false\\n    function isPriceProvider(IPriceProvider _provider) external view returns (bool);\\n\\n    /// @notice Gets number of price providers registered\\n    /// @return number of price providers registered\\n    function providersCount() external view returns (uint256);\\n\\n    /// @notice Gets an array of price providers\\n    /// @return array of price providers\\n    function providerList() external view returns (address[] memory);\\n\\n    /// @notice Sanity check function\\n    /// @return returns always TRUE\\n    function priceProvidersRepositoryPing() external pure returns (bytes4);\\n}\\n\",\"keccak256\":\"0x715cb0aa617134d1f4ebe427adb5899455114260c3d853732a6302fb5b5d6e53\",\"license\":\"BUSL-1.1\"},\"contracts/lib/Ping.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.7.6 <0.9.0;\\n\\n\\nlibrary Ping {\\n    function pong(function() external pure returns(bytes4) pingFunction) internal pure returns (bool) {\\n        return pingFunction.address != address(0) && pingFunction.selector == pingFunction();\\n    }\\n}\\n\",\"keccak256\":\"0xc99622dfb46693aeb8a332ee0e124f54e12d5ed5e6b8f70a0c0e3678df35c8b1\",\"license\":\"BUSL-1.1\"},\"contracts/lib/TokenHelper.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n\\nlibrary TokenHelper {\\n    uint256 private constant _BYTES32_SIZE = 32;\\n\\n    error TokenIsNotAContract();\\n\\n    function assertAndGetDecimals(address _token) internal view returns (uint256) {\\n        (bool hasMetadata, bytes memory data) = _tokenMetadataCall(_token, abi.encodeCall(IERC20Metadata.decimals,()));\\n\\n        // decimals() is optional in the ERC20 standard, so if metadata is not accessible\\n        // we assume there are no decimals and use 0.\\n        if (!hasMetadata) {\\n            return 0;\\n        }\\n\\n        return abi.decode(data, (uint8));\\n    }\\n\\n    /// @dev Returns the symbol for the provided ERC20 token.\\n    /// An empty string is returned if the call to the token didn't succeed.\\n    /// @param _token address of the token to get the symbol for\\n    /// @return assetSymbol the token symbol\\n    function symbol(address _token) internal view returns (string memory assetSymbol) {\\n        (bool hasMetadata, bytes memory data) = _tokenMetadataCall(_token, abi.encodeCall(IERC20Metadata.symbol,()));\\n\\n        if (!hasMetadata || data.length == 0) {\\n            return \\\"?\\\";\\n        } else if (data.length == _BYTES32_SIZE) {\\n            return string(removeZeros(data));\\n        } else {\\n            return abi.decode(data, (string));\\n        }\\n    }\\n\\n    /// @dev Removes bytes with value equal to 0 from the provided byte array.\\n    /// @param _data byte array from which to remove zeroes\\n    /// @return result byte array with zeroes removed \\n    function removeZeros(bytes memory _data) internal pure returns (bytes memory result) {\\n        uint256 n = _data.length;\\n\\n        unchecked {\\n            for (uint256 i; i < n; i++) {\\n                if (_data[i] == 0) continue;\\n\\n                result = abi.encodePacked(result, _data[i]);\\n            }\\n        }\\n    }\\n\\n    /// @dev Performs a staticcall to the token to get its metadata (symbol, decimals, name)\\n    function _tokenMetadataCall(address _token, bytes memory _data) private view returns(bool, bytes memory) {\\n        // We need to do this before the call, otherwise the call will succeed even for EOAs\\n        if (!Address.isContract(_token)) revert TokenIsNotAContract();\\n\\n        (bool success, bytes memory result) = _token.staticcall(_data);\\n\\n        // If the call reverted we assume the token doesn't follow the metadata extension\\n        if (!success) {\\n            return (false, \\\"\\\");\\n        }\\n\\n        return (true, result);\\n    }\\n}\\n\",\"keccak256\":\"0x7e65c9647420e686cc897b3426cd94840cd42b25cc0a647e4bcdf45897fe6743\",\"license\":\"BUSL-1.1\"},\"contracts/priceProviders/IndividualPriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"./PriceProvider.sol\\\";\\nimport \\\"./../lib/TokenHelper.sol\\\";\\n\\n/// @title IndividualPriceProvider\\n/// @notice IndividualPriceProvider\\n/// @custom:security-contact security@silo.finance\\nabstract contract IndividualPriceProvider is PriceProvider {\\n    // solhint-disable-next-line var-name-mixedcase\\n    address public immutable ASSET;\\n\\n    error InvalidAssetAddress();\\n\\n    constructor(\\n        IPriceProvidersRepository _priceProvidersRepository,\\n        address _asset,\\n        string memory _symbol\\n    ) PriceProvider(_priceProvidersRepository) {\\n        if (keccak256(abi.encode(TokenHelper.symbol(_asset))) != keccak256(abi.encode(_symbol))) {\\n            revert InvalidAssetAddress();\\n        }\\n\\n        ASSET = _asset;\\n    }\\n\\n    /// @notice Only ASSET token is supported, false otherwise.\\n    /// @param _asset address of an asset\\n    function assetSupported(address _asset) public view virtual override returns (bool) {\\n        return _asset == ASSET;\\n    }\\n}\\n\",\"keccak256\":\"0x67769099cb6a65f504ba5bd705041647376242c089a4494323c364572a76ac8d\",\"license\":\"BUSL-1.1\"},\"contracts/priceProviders/PriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.7.6 <0.9.0;\\n\\nimport \\\"../lib/Ping.sol\\\";\\nimport \\\"../interfaces/IPriceProvider.sol\\\";\\nimport \\\"../interfaces/IPriceProvidersRepository.sol\\\";\\n\\n/// @title PriceProvider\\n/// @notice Abstract PriceProvider contract, parent of all PriceProviders\\n/// @dev Price provider is a contract that directly integrates with a price source, ie. a DEX or alternative system\\n/// like Chainlink to calculate TWAP prices for assets. Each price provider should support a single price source\\n/// and multiple assets.\\nabstract contract PriceProvider is IPriceProvider {\\n    /// @notice PriceProvidersRepository address\\n    IPriceProvidersRepository public immutable priceProvidersRepository;\\n\\n    /// @notice Token address which prices are quoted in. Must be the same as PriceProvidersRepository.quoteToken\\n    address public immutable override quoteToken;\\n\\n    modifier onlyManager() {\\n        if (priceProvidersRepository.manager() != msg.sender) revert(\\\"OnlyManager\\\");\\n        _;\\n    }\\n\\n    /// @param _priceProvidersRepository address of PriceProvidersRepository\\n    constructor(IPriceProvidersRepository _priceProvidersRepository) {\\n        if (\\n            !Ping.pong(_priceProvidersRepository.priceProvidersRepositoryPing)            \\n        ) {\\n            revert(\\\"InvalidPriceProviderRepository\\\");\\n        }\\n\\n        priceProvidersRepository = _priceProvidersRepository;\\n        quoteToken = _priceProvidersRepository.quoteToken();\\n    }\\n\\n    /// @inheritdoc IPriceProvider\\n    function priceProviderPing() external pure override returns (bytes4) {\\n        return this.priceProviderPing.selector;\\n    }\\n\\n    function _revertBytes(bytes memory _errMsg, string memory _customErr) internal pure {\\n        if (_errMsg.length > 0) {\\n            assembly { // solhint-disable-line no-inline-assembly\\n                revert(add(32, _errMsg), mload(_errMsg))\\n            }\\n        }\\n\\n        revert(_customErr);\\n    }\\n}\\n\",\"keccak256\":\"0xd5d1739891a5639048bdf0c7c72838e848c3f381b56f978780d4d866535f30a5\",\"license\":\"BUSL-1.1\"},\"contracts/priceProviders/gOHM/GOHMPriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"../IndividualPriceProvider.sol\\\";\\n\\n/// @dev Simplified version of the gOHM token interface with the method that is required for the gOHM price calculation.\\ninterface IgOHMLike {\\n    /// @dev Rebase index, 1e9 base unit is used.\\n    function index() external view returns (uint256);\\n}\\n\\n/// @title GOHMPriceProvider\\n/// @notice GOHMPriceProvider is the price provider for gOHM token. Price calculations depends\\n/// on the price of OHMv2. Price providers repository must be ready to provide the OHMv2 price.\\n/// @custom:security-contact security@silo.finance\\ncontract GOHMPriceProvider is IndividualPriceProvider {\\n    /// @dev Base units for the rebase index value\\n    uint256 public constant OHM_INDEX_BASE_UNITS = 1e9;\\n\\n    /// @dev Original token, OHMv2.\\n    // solhint-disable-next-line var-name-mixedcase\\n    address public immutable OHM;\\n\\n    error AssetNotSupported();\\n    error IndexFunctionNotSupported();\\n    error InvalidOHMAddress();\\n\\n    /// @dev Inside constructor there is a check of gOHM address.\\n    constructor(\\n        IPriceProvidersRepository _priceProvidersRepository,\\n        address _ohm,\\n        address _gOhm\\n    ) IndividualPriceProvider(_priceProvidersRepository, _gOhm, \\\"gOHM\\\") {\\n        // Sanity check to verify if gOHM token `index` method will return data and will not revert.\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory data) = _gOhm.staticcall(abi.encodeCall(IgOHMLike.index, ()));\\n        if (!success || data.length == 0) revert IndexFunctionNotSupported();\\n\\n        if (keccak256(abi.encode(TokenHelper.symbol(_ohm))) != keccak256(abi.encode(\\\"OHM\\\"))) {\\n            revert InvalidOHMAddress();\\n        }\\n\\n        OHM = _ohm;\\n    }\\n\\n    /// @notice Returns the current index of rebasing token per one wrapped token (total amount of rebases) in\\n    /// OHM_INDEX_BASE_UNITS\\n    function index() external view virtual returns (uint256) {\\n        return IgOHMLike(ASSET).index();\\n    }\\n\\n    /// @inheritdoc IPriceProvider\\n    function getPrice(address _asset) public view virtual override returns (uint256 gOhmPrice) {\\n        if (!assetSupported(_asset)) revert AssetNotSupported();\\n\\n        gOhmPrice = priceProvidersRepository.getPrice(OHM) * IgOHMLike(ASSET).index();\\n\\n        // We can uncheck safely to save some gas. OHM_INDEX_BASE_UNITS is a non-zero constant number.\\n        unchecked {\\n            gOhmPrice = gOhmPrice / OHM_INDEX_BASE_UNITS;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x712d30bc0bb6d3d6cff646d0c45b481d06819f664778a57362333c0f2789b8a8\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b506040516200111f3803806200111f8339810160408190526200003591620005f4565b828160405180604001604052806004815260200163674f484d60e01b8152508262000079816001600160a01b031663eec3e6a76200033e60201b620004051760201c565b620000ca5760405162461bcd60e51b815260206004820152601e60248201527f496e76616c6964507269636550726f76696465725265706f7369746f72790000604482015260640160405180910390fd5b6001600160a01b038116608081905260408051630217a4b760e41b8152905163217a4b70916004808201926020929091908290030181865afa15801562000115573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013b919062000648565b6001600160a01b031660a052506040516200015b9082906020016200069b565b604051602081830303815290604052805190602001206200018783620003c860201b6200048b1760201c565b6040516020016200019991906200069b565b6040516020818303038152906040528051906020012014620001ce57604051630ccd248560e21b815260040160405180910390fd5b506001600160a01b0390811660c05260408051600481526024810182526020810180516001600160e01b0316632986c0e560e01b17905290516000935083928516916200021b91620006d0565b600060405180830381855afa9150503d806000811462000258576040519150601f19603f3d011682016040523d82523d6000602084013e6200025d565b606091505b50915091508115806200026f57508051155b156200028d576040516215c14d60e01b815260040160405180910390fd5b604051602001620002b5906020808252600390820152624f484d60e81b604082015260600190565b60405160208183030381529060405280519060200120620002e185620003c860201b6200048b1760201c565b604051602001620002f391906200069b565b6040516020818303038152906040528051906020012014620003285760405163cf091b2160e01b815260040160405180910390fd5b5050506001600160a01b031660e052506200082f565b60006001600160a01b03831615801590620003c1575082826040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000386573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ac9190620006ee565b60e083901b6001600160e01b03199081169116145b9392505050565b6040805160048152602481019091526020810180516001600160e01b039081166395d89b4160e01b1790915260609160009182916200040b918691906200047c16565b915091508115806200041c57508051155b15620004425750506040805180820190915260018152603f60f81b602082015292915050565b60208151036200045f5762000457816200054b565b949350505050565b8080602001905181019062000457919062000730565b5050919050565b600060606200049684620005d560201b620005311760201c565b620004b4576040516373d39f9d60e01b815260040160405180910390fd5b600080856001600160a01b031685604051620004d19190620006d0565b600060405180830381855afa9150503d80600081146200050e576040519150601f19603f3d011682016040523d82523d6000602084013e62000513565b606091505b5091509150816200053c5760006040518060200160405280600081525093509350505062000544565b600193509150505b9250929050565b805160609060005b818110156200047557838181518110620005715762000571620007e8565b01602001516001600160f81b03191615620005cc57828482815181106200059c576200059c620007e8565b602001015160f81c60f81b604051602001620005ba929190620007fe565b60405160208183030381529060405292505b60010162000553565b3b151590565b6001600160a01b0381168114620005f157600080fd5b50565b6000806000606084860312156200060a57600080fd5b83516200061781620005db565b60208501519093506200062a81620005db565b60408501519092506200063d81620005db565b809150509250925092565b6000602082840312156200065b57600080fd5b8151620003c181620005db565b60005b83811015620006855781810151838201526020016200066b565b8381111562000695576000848401525b50505050565b6020815260008251806020840152620006bc81604085016020870162000668565b601f01601f19169190910160400192915050565b60008251620006e481846020870162000668565b9190910192915050565b6000602082840312156200070157600080fd5b81516001600160e01b031981168114620003c157600080fd5b634e487b7160e01b600052604160045260246000fd5b6000602082840312156200074357600080fd5b81516001600160401b03808211156200075b57600080fd5b818401915084601f8301126200077057600080fd5b8151818111156200078557620007856200071a565b604051601f8201601f19908116603f01168101908382118183101715620007b057620007b06200071a565b81604052828152876020848701011115620007ca57600080fd5b620007dd83602083016020880162000668565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600083516200081281846020880162000668565b6001600160f81b0319939093169190920190815260010192915050565b60805160a05160c05160e05161088d6200089260003960008181610178015261035b01526000818161010a015281816101aa015281816101ee0152818161027701526102c401526000609d0152600081816101460152610383015261088d6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806357e0c50f1161006657806357e0c50f1461012c5780635ddf2be3146101415780637c07e07414610168578063a6c41fec14610173578063b31fb2561461019a57600080fd5b8063217a4b70146100985780632986c0e5146100dc57806341976e09146100f25780634800d97f14610105575b600080fd5b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e46101ea565b6040519081526020016100d3565b6100e461010036600461066a565b610273565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516357e0c50f60e01b81526020016100d3565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6100e4633b9aca0081565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6101da6101a836600461066a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b60405190151581526020016100d3565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632986c0e56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561024a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026e9190610693565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03908116908316146102c25760405163981a2a2b60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632986c0e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610320573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103449190610693565b6040516341976e0960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f000000000000000000000000000000000000000000000000000000000000000016906341976e0990602401602060405180830381865afa1580156103ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee9190610693565b6103f891906106ac565b633b9aca00900492915050565b60006001600160a01b03831615801590610484575082826040518163ffffffff1660e01b8152600401602060405180830381865afa15801561044b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f91906106d9565b60e083901b6001600160e01b03199081169116145b9392505050565b6040805160048152602481019091526020810180516001600160e01b03166395d89b4160e01b17905260609060009081906104c7908590610537565b915091508115806104d757508051155b156104fc5750506040805180820190915260018152603f60f81b602082015292915050565b60208151036105165761050e816105eb565b949350505050565b8080602001905181019061050e9190610749565b5050919050565b3b151590565b60006060833b61055a576040516373d39f9d60e01b815260040160405180910390fd5b600080856001600160a01b03168560405161057591906107f6565b600060405180830381855afa9150503d80600081146105b0576040519150601f19603f3d011682016040523d82523d6000602084013e6105b5565b606091505b5091509150816105dc576000604051806020016040528060008152509350935050506105e4565b600193509150505b9250929050565b805160609060005b8181101561052a5783818151811061060d5761060d610812565b01602001516001600160f81b03191615610662578284828151811061063457610634610812565b602001015160f81c60f81b604051602001610650929190610828565b60405160208183030381529060405292505b6001016105f3565b60006020828403121561067c57600080fd5b81356001600160a01b038116811461048457600080fd5b6000602082840312156106a557600080fd5b5051919050565b60008160001904831182151516156106d457634e487b7160e01b600052601160045260246000fd5b500290565b6000602082840312156106eb57600080fd5b81516001600160e01b03198116811461048457600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b8381101561073457818101518382015260200161071c565b83811115610743576000848401525b50505050565b60006020828403121561075b57600080fd5b815167ffffffffffffffff8082111561077357600080fd5b818401915084601f83011261078757600080fd5b81518181111561079957610799610703565b604051601f8201601f19908116603f011681019083821181831017156107c1576107c1610703565b816040528281528760208487010111156107da57600080fd5b6107eb836020830160208801610719565b979650505050505050565b60008251610808818460208701610719565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b6000835161083a818460208801610719565b6001600160f81b031993909316919092019081526001019291505056fea2646970667358221220dbc218f46be17b7f0e457870387f813f939710efe875a19542d742663540269164736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806357e0c50f1161006657806357e0c50f1461012c5780635ddf2be3146101415780637c07e07414610168578063a6c41fec14610173578063b31fb2561461019a57600080fd5b8063217a4b70146100985780632986c0e5146100dc57806341976e09146100f25780634800d97f14610105575b600080fd5b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e46101ea565b6040519081526020016100d3565b6100e461010036600461066a565b610273565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516357e0c50f60e01b81526020016100d3565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6100e4633b9aca0081565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6101da6101a836600461066a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b60405190151581526020016100d3565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632986c0e56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561024a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026e9190610693565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03908116908316146102c25760405163981a2a2b60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632986c0e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610320573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103449190610693565b6040516341976e0960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f000000000000000000000000000000000000000000000000000000000000000016906341976e0990602401602060405180830381865afa1580156103ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee9190610693565b6103f891906106ac565b633b9aca00900492915050565b60006001600160a01b03831615801590610484575082826040518163ffffffff1660e01b8152600401602060405180830381865afa15801561044b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f91906106d9565b60e083901b6001600160e01b03199081169116145b9392505050565b6040805160048152602481019091526020810180516001600160e01b03166395d89b4160e01b17905260609060009081906104c7908590610537565b915091508115806104d757508051155b156104fc5750506040805180820190915260018152603f60f81b602082015292915050565b60208151036105165761050e816105eb565b949350505050565b8080602001905181019061050e9190610749565b5050919050565b3b151590565b60006060833b61055a576040516373d39f9d60e01b815260040160405180910390fd5b600080856001600160a01b03168560405161057591906107f6565b600060405180830381855afa9150503d80600081146105b0576040519150601f19603f3d011682016040523d82523d6000602084013e6105b5565b606091505b5091509150816105dc576000604051806020016040528060008152509350935050506105e4565b600193509150505b9250929050565b805160609060005b8181101561052a5783818151811061060d5761060d610812565b01602001516001600160f81b03191615610662578284828151811061063457610634610812565b602001015160f81c60f81b604051602001610650929190610828565b60405160208183030381529060405292505b6001016105f3565b60006020828403121561067c57600080fd5b81356001600160a01b038116811461048457600080fd5b6000602082840312156106a557600080fd5b5051919050565b60008160001904831182151516156106d457634e487b7160e01b600052601160045260246000fd5b500290565b6000602082840312156106eb57600080fd5b81516001600160e01b03198116811461048457600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b8381101561073457818101518382015260200161071c565b83811115610743576000848401525b50505050565b60006020828403121561075b57600080fd5b815167ffffffffffffffff8082111561077357600080fd5b818401915084601f83011261078757600080fd5b81518181111561079957610799610703565b604051601f8201601f19908116603f011681019083821181831017156107c1576107c1610703565b816040528281528760208487010111156107da57600080fd5b6107eb836020830160208801610719565b979650505050505050565b60008251610808818460208701610719565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b6000835161083a818460208801610719565b6001600160f81b031993909316919092019081526001019291505056fea2646970667358221220dbc218f46be17b7f0e457870387f813f939710efe875a19542d742663540269164736f6c634300080d0033",
  "devdoc": {
    "custom:security-contact": "security@silo.finance",
    "kind": "dev",
    "methods": {
      "assetSupported(address)": {
        "params": {
          "_asset": "address of an asset"
        }
      },
      "constructor": {
        "details": "Inside constructor there is a check of gOHM address."
      },
      "getPrice(address)": {
        "params": {
          "_asset": "address of an asset for which to read price"
        },
        "returns": {
          "gOhmPrice": "of asses with 18 decimals, throws when pool is not ready yet to provide price"
        }
      },
      "priceProviderPing()": {
        "details": "this can save us from simple human errors, in case we use invalid address but this should NOT be treated as security check",
        "returns": {
          "_0": "always true"
        }
      }
    },
    "stateVariables": {
      "OHM": {
        "details": "Original token, OHMv2."
      },
      "OHM_INDEX_BASE_UNITS": {
        "details": "Base units for the rebase index value"
      }
    },
    "title": "GOHMPriceProvider",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "assetSupported(address)": {
        "notice": "Only ASSET token is supported, false otherwise."
      },
      "getPrice(address)": {
        "notice": "Returns \"Time-Weighted Average Price\" for an asset. Calculates TWAP price for quote/asset. It unifies all tokens decimal to 18, examples: - if asses == quote it returns 1e18 - if asset is USDC and quote is ETH and ETH costs ~$3300 then it returns ~0.0003e18 WETH per 1 USDC"
      },
      "index()": {
        "notice": "Returns the current index of rebasing token per one wrapped token (total amount of rebases) in OHM_INDEX_BASE_UNITS"
      },
      "priceProviderPing()": {
        "notice": "Helper method that allows easily detects, if contract is PriceProvider"
      },
      "priceProvidersRepository()": {
        "notice": "PriceProvidersRepository address"
      },
      "quoteToken()": {
        "notice": "Token address which prices are quoted in. Must be the same as PriceProvidersRepository.quoteToken"
      }
    },
    "notice": "GOHMPriceProvider is the price provider for gOHM token. Price calculations depends on the price of OHMv2. Price providers repository must be ready to provide the OHMv2 price.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}