{
  "address": "0x7a90F2b9f72bA840A55557b5c6fa2E3b83B86037",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPriceProvidersRepository",
          "name": "_priceProvidersRepository",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AssetNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAssetAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "increaseCardinalityRequired",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "oldestObservationSatisfied",
          "type": "bool"
        }
      ],
      "name": "OracleNotReady",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenIsNotAContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroPrice",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "twapDuration",
          "type": "uint256"
        }
      ],
      "name": "TwapDurationUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ASSET",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EZETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MARKET",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PT_ORACLE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "assetSupported",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ezETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_newTwapDuration",
          "type": "uint32"
        }
      ],
      "name": "getOracleState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "increaseCardinalityRequired",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "oldestObservationSatisfied",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_twapDuration",
          "type": "uint32"
        }
      ],
      "name": "getPtToSyRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratePRtoEETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceProviderPing",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceProvidersRepository",
      "outputs": [
        {
          "internalType": "contract IPriceProvidersRepository",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoteToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_newTwapDuration",
          "type": "uint32"
        }
      ],
      "name": "setTwapDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "twapDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x82db7ca4e9e2d22f857c8177a491eb8e05bf759748b02d42c1b7b872a53d3812",
  "receipt": {
    "to": null,
    "from": "0x6d228Fa4daD2163056A48Fc2186d716f5c65E89A",
    "contractAddress": "0x7a90F2b9f72bA840A55557b5c6fa2E3b83B86037",
    "transactionIndex": 50,
    "gasUsed": "827176",
    "logsBloom": "0x
    "blockHash": "0x0471a449747dc2b1aa48b97bb625a4d7159e45dab09bf537fdf472e8de33c436",
    "transactionHash": "0x82db7ca4e9e2d22f857c8177a491eb8e05bf759748b02d42c1b7b872a53d3812",
    "logs": [
      {
        "transactionIndex": 50,
        "blockNumber": 19712198,
        "transactionHash": "0x82db7ca4e9e2d22f857c8177a491eb8e05bf759748b02d42c1b7b872a53d3812",
        "address": "0x7a90F2b9f72bA840A55557b5c6fa2E3b83B86037",
        "topics": [
          "0xd82b20bed317f4f38777ecc650568940cbd210b15af84857f885373342a3d6fa"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000708",
        "logIndex": 180,
        "blockHash": "0x0471a449747dc2b1aa48b97bb625a4d7159e45dab09bf537fdf472e8de33c436"
      }
    ],
    "blockNumber": 19712198,
    "cumulativeGasUsed": "6739275",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7C2ca9D502f2409BeceAfa68E97a176Ff805029F"
  ],
  "numDeployments": 2,
  "solcInputHash": "cb151eff327eb77b7e9df1a334dc1852",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPriceProvidersRepository\",\"name\":\"_priceProvidersRepository\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AssetNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAssetAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"increaseCardinalityRequired\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"oldestObservationSatisfied\",\"type\":\"bool\"}],\"name\":\"OracleNotReady\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenIsNotAContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroPrice\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"twapDuration\",\"type\":\"uint256\"}],\"name\":\"TwapDurationUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ASSET\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EZETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARKET\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PT_ORACLE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"assetSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ezETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newTwapDuration\",\"type\":\"uint32\"}],\"name\":\"getOracleState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"increaseCardinalityRequired\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"oldestObservationSatisfied\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"}],\"name\":\"getPtToSyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ratePRtoEETH\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceProviderPing\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceProvidersRepository\",\"outputs\":[{\"internalType\":\"contract IPriceProvidersRepository\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newTwapDuration\",\"type\":\"uint32\"}],\"name\":\"setTwapDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twapDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"assetSupported(address)\":{\"params\":{\"_asset\":\"address of an asset\"}},\"getPrice(address)\":{\"params\":{\"_asset\":\"address of an asset for which to read price\"},\"returns\":{\"price\":\"of asses with 18 decimals, throws when pool is not ready yet to provide price\"}},\"priceProviderPing()\":{\"details\":\"this can save us from simple human errors, in case we use invalid address but this should NOT be treated as security check\",\"returns\":{\"_0\":\"always true\"}},\"setTwapDuration(uint32)\":{\"params\":{\"_newTwapDuration\":\"The new TWAP duration that should be used in the price provider\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assetSupported(address)\":{\"notice\":\"Only ASSET token is supported, false otherwise.\"},\"getOracleState(uint32)\":{\"notice\":\"Resolve oracle state\"},\"getPrice(address)\":{\"notice\":\"Returns \\\"Time-Weighted Average Price\\\" for an asset. Calculates TWAP price for quote/asset. It unifies all tokens decimal to 18, examples: - if asses == quote it returns 1e18 - if asset is USDC and quote is ETH and ETH costs ~$3300 then it returns ~0.0003e18 WETH per 1 USDC\"},\"getPtToSyRate(uint32)\":{\"notice\":\"Get PT to asset rate\"},\"priceProviderPing()\":{\"notice\":\"Helper method that allows easily detects, if contract is PriceProvider\"},\"priceProvidersRepository()\":{\"notice\":\"PriceProvidersRepository address\"},\"quoteToken()\":{\"notice\":\"Token address which prices are quoted in. Must be the same as PriceProvidersRepository.quoteToken\"},\"setTwapDuration(uint32)\":{\"notice\":\"Allow's to update a TWAP duration\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/priceProviders/pendleTokens/PendleEzETH250424PriceProviderEth.sol\":\"PendleEzETH250424PriceProviderEth\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.7.6 <0.9.0;\\n\\n/// @title Common interface for Silo Price Providers\\ninterface IPriceProvider {\\n    /// @notice Returns \\\"Time-Weighted Average Price\\\" for an asset. Calculates TWAP price for quote/asset.\\n    /// It unifies all tokens decimal to 18, examples:\\n    /// - if asses == quote it returns 1e18\\n    /// - if asset is USDC and quote is ETH and ETH costs ~$3300 then it returns ~0.0003e18 WETH per 1 USDC\\n    /// @param _asset address of an asset for which to read price\\n    /// @return price of asses with 18 decimals, throws when pool is not ready yet to provide price\\n    function getPrice(address _asset) external view returns (uint256 price);\\n\\n    /// @dev Informs if PriceProvider is setup for asset. It does not means PriceProvider can provide price right away.\\n    /// Some providers implementations need time to \\\"build\\\" buffer for TWAP price,\\n    /// so price may not be available yet but this method will return true.\\n    /// @param _asset asset in question\\n    /// @return TRUE if asset has been setup, otherwise false\\n    function assetSupported(address _asset) external view returns (bool);\\n\\n    /// @notice Gets token address in which prices are quoted\\n    /// @return quoteToken address\\n    function quoteToken() external view returns (address);\\n\\n    /// @notice Helper method that allows easily detects, if contract is PriceProvider\\n    /// @dev this can save us from simple human errors, in case we use invalid address\\n    /// but this should NOT be treated as security check\\n    /// @return always true\\n    function priceProviderPing() external pure returns (bytes4);\\n}\\n\",\"keccak256\":\"0xe25259fe540647dd3945dbc8eff5f7ec789c6708b42e1d82c456d3e8c9082147\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPriceProvidersRepository.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.7.6 <0.9.0;\\n\\nimport \\\"./IPriceProvider.sol\\\";\\n\\ninterface IPriceProvidersRepository {\\n    /// @notice Emitted when price provider is added\\n    /// @param newPriceProvider new price provider address\\n    event NewPriceProvider(IPriceProvider indexed newPriceProvider);\\n\\n    /// @notice Emitted when price provider is removed\\n    /// @param priceProvider removed price provider address\\n    event PriceProviderRemoved(IPriceProvider indexed priceProvider);\\n\\n    /// @notice Emitted when asset is assigned to price provider\\n    /// @param asset assigned asset   address\\n    /// @param priceProvider price provider address\\n    event PriceProviderForAsset(address indexed asset, IPriceProvider indexed priceProvider);\\n\\n    /// @notice Register new price provider\\n    /// @param _priceProvider address of price provider\\n    function addPriceProvider(IPriceProvider _priceProvider) external;\\n\\n    /// @notice Unregister price provider\\n    /// @param _priceProvider address of price provider to be removed\\n    function removePriceProvider(IPriceProvider _priceProvider) external;\\n\\n    /// @notice Sets price provider for asset\\n    /// @dev Request for asset price is forwarded to the price provider assigned to that asset\\n    /// @param _asset address of an asset for which price provider will be used\\n    /// @param _priceProvider address of price provider\\n    function setPriceProviderForAsset(address _asset, IPriceProvider _priceProvider) external;\\n\\n    /// @notice Returns \\\"Time-Weighted Average Price\\\" for an asset\\n    /// @param _asset address of an asset for which to read price\\n    /// @return price TWAP price of a token with 18 decimals\\n    function getPrice(address _asset) external view returns (uint256 price);\\n\\n    /// @notice Gets price provider assigned to an asset\\n    /// @param _asset address of an asset for which to get price provider\\n    /// @return priceProvider address of price provider\\n    function priceProviders(address _asset) external view returns (IPriceProvider priceProvider);\\n\\n    /// @notice Gets token address in which prices are quoted\\n    /// @return quoteToken address\\n    function quoteToken() external view returns (address);\\n\\n    /// @notice Gets manager role address\\n    /// @return manager role address\\n    function manager() external view returns (address);\\n\\n    /// @notice Checks if providers are available for an asset\\n    /// @param _asset asset address to check\\n    /// @return returns TRUE if price feed is ready, otherwise false\\n    function providersReadyForAsset(address _asset) external view returns (bool);\\n\\n    /// @notice Returns true if address is a registered price provider\\n    /// @param _provider address of price provider to be removed\\n    /// @return true if address is a registered price provider, otherwise false\\n    function isPriceProvider(IPriceProvider _provider) external view returns (bool);\\n\\n    /// @notice Gets number of price providers registered\\n    /// @return number of price providers registered\\n    function providersCount() external view returns (uint256);\\n\\n    /// @notice Gets an array of price providers\\n    /// @return array of price providers\\n    function providerList() external view returns (address[] memory);\\n\\n    /// @notice Sanity check function\\n    /// @return returns always TRUE\\n    function priceProvidersRepositoryPing() external pure returns (bytes4);\\n}\\n\",\"keccak256\":\"0x715cb0aa617134d1f4ebe427adb5899455114260c3d853732a6302fb5b5d6e53\",\"license\":\"BUSL-1.1\"},\"contracts/lib/Ping.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.7.6 <0.9.0;\\n\\n\\nlibrary Ping {\\n    function pong(function() external pure returns(bytes4) pingFunction) internal pure returns (bool) {\\n        return pingFunction.address != address(0) && pingFunction.selector == pingFunction();\\n    }\\n}\\n\",\"keccak256\":\"0xc99622dfb46693aeb8a332ee0e124f54e12d5ed5e6b8f70a0c0e3678df35c8b1\",\"license\":\"BUSL-1.1\"},\"contracts/lib/TokenHelper.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n\\nlibrary TokenHelper {\\n    uint256 private constant _BYTES32_SIZE = 32;\\n\\n    error TokenIsNotAContract();\\n\\n    function assertAndGetDecimals(address _token) internal view returns (uint256) {\\n        (bool hasMetadata, bytes memory data) = _tokenMetadataCall(_token, abi.encodeCall(IERC20Metadata.decimals,()));\\n\\n        // decimals() is optional in the ERC20 standard, so if metadata is not accessible\\n        // we assume there are no decimals and use 0.\\n        if (!hasMetadata) {\\n            return 0;\\n        }\\n\\n        return abi.decode(data, (uint8));\\n    }\\n\\n    /// @dev Returns the symbol for the provided ERC20 token.\\n    /// An empty string is returned if the call to the token didn't succeed.\\n    /// @param _token address of the token to get the symbol for\\n    /// @return assetSymbol the token symbol\\n    function symbol(address _token) internal view returns (string memory assetSymbol) {\\n        (bool hasMetadata, bytes memory data) = _tokenMetadataCall(_token, abi.encodeCall(IERC20Metadata.symbol,()));\\n\\n        if (!hasMetadata || data.length == 0) {\\n            return \\\"?\\\";\\n        } else if (data.length == _BYTES32_SIZE) {\\n            return string(removeZeros(data));\\n        } else {\\n            return abi.decode(data, (string));\\n        }\\n    }\\n\\n    /// @dev Removes bytes with value equal to 0 from the provided byte array.\\n    /// @param _data byte array from which to remove zeroes\\n    /// @return result byte array with zeroes removed \\n    function removeZeros(bytes memory _data) internal pure returns (bytes memory result) {\\n        uint256 n = _data.length;\\n\\n        unchecked {\\n            for (uint256 i; i < n; i++) {\\n                if (_data[i] == 0) continue;\\n\\n                result = abi.encodePacked(result, _data[i]);\\n            }\\n        }\\n    }\\n\\n    /// @dev Performs a staticcall to the token to get its metadata (symbol, decimals, name)\\n    function _tokenMetadataCall(address _token, bytes memory _data) private view returns(bool, bytes memory) {\\n        // We need to do this before the call, otherwise the call will succeed even for EOAs\\n        if (!Address.isContract(_token)) revert TokenIsNotAContract();\\n\\n        (bool success, bytes memory result) = _token.staticcall(_data);\\n\\n        // If the call reverted we assume the token doesn't follow the metadata extension\\n        if (!success) {\\n            return (false, \\\"\\\");\\n        }\\n\\n        return (true, result);\\n    }\\n}\\n\",\"keccak256\":\"0x7e65c9647420e686cc897b3426cd94840cd42b25cc0a647e4bcdf45897fe6743\",\"license\":\"BUSL-1.1\"},\"contracts/priceProviders/IndividualPriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"./PriceProvider.sol\\\";\\nimport \\\"./../lib/TokenHelper.sol\\\";\\n\\n/// @title IndividualPriceProvider\\n/// @notice IndividualPriceProvider\\n/// @custom:security-contact security@silo.finance\\nabstract contract IndividualPriceProvider is PriceProvider {\\n    // solhint-disable-next-line var-name-mixedcase\\n    address public immutable ASSET;\\n\\n    error InvalidAssetAddress();\\n\\n    constructor(\\n        IPriceProvidersRepository _priceProvidersRepository,\\n        address _asset,\\n        string memory _symbol\\n    ) PriceProvider(_priceProvidersRepository) {\\n        if (keccak256(abi.encode(TokenHelper.symbol(_asset))) != keccak256(abi.encode(_symbol))) {\\n            revert InvalidAssetAddress();\\n        }\\n\\n        ASSET = _asset;\\n    }\\n\\n    /// @notice Only ASSET token is supported, false otherwise.\\n    /// @param _asset address of an asset\\n    function assetSupported(address _asset) public view virtual override returns (bool) {\\n        return _asset == ASSET;\\n    }\\n}\\n\",\"keccak256\":\"0x67769099cb6a65f504ba5bd705041647376242c089a4494323c364572a76ac8d\",\"license\":\"BUSL-1.1\"},\"contracts/priceProviders/PriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.7.6 <0.9.0;\\n\\nimport \\\"../lib/Ping.sol\\\";\\nimport \\\"../interfaces/IPriceProvider.sol\\\";\\nimport \\\"../interfaces/IPriceProvidersRepository.sol\\\";\\n\\n/// @title PriceProvider\\n/// @notice Abstract PriceProvider contract, parent of all PriceProviders\\n/// @dev Price provider is a contract that directly integrates with a price source, ie. a DEX or alternative system\\n/// like Chainlink to calculate TWAP prices for assets. Each price provider should support a single price source\\n/// and multiple assets.\\nabstract contract PriceProvider is IPriceProvider {\\n    /// @notice PriceProvidersRepository address\\n    IPriceProvidersRepository public immutable priceProvidersRepository;\\n\\n    /// @notice Token address which prices are quoted in. Must be the same as PriceProvidersRepository.quoteToken\\n    address public immutable override quoteToken;\\n\\n    modifier onlyManager() {\\n        if (priceProvidersRepository.manager() != msg.sender) revert(\\\"OnlyManager\\\");\\n        _;\\n    }\\n\\n    /// @param _priceProvidersRepository address of PriceProvidersRepository\\n    constructor(IPriceProvidersRepository _priceProvidersRepository) {\\n        if (\\n            !Ping.pong(_priceProvidersRepository.priceProvidersRepositoryPing)            \\n        ) {\\n            revert(\\\"InvalidPriceProviderRepository\\\");\\n        }\\n\\n        priceProvidersRepository = _priceProvidersRepository;\\n        quoteToken = _priceProvidersRepository.quoteToken();\\n    }\\n\\n    /// @inheritdoc IPriceProvider\\n    function priceProviderPing() external pure override returns (bytes4) {\\n        return this.priceProviderPing.selector;\\n    }\\n\\n    function _revertBytes(bytes memory _errMsg, string memory _customErr) internal pure {\\n        if (_errMsg.length > 0) {\\n            assembly { // solhint-disable-line no-inline-assembly\\n                revert(add(32, _errMsg), mload(_errMsg))\\n            }\\n        }\\n\\n        revert(_customErr);\\n    }\\n}\\n\",\"keccak256\":\"0xd5d1739891a5639048bdf0c7c72838e848c3f381b56f978780d4d866535f30a5\",\"license\":\"BUSL-1.1\"},\"contracts/priceProviders/pendleTokens/PendleEzETH250424PriceProviderEth.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"./PendleEzETHPriceProvider.sol\\\";\\n\\ncontract PendleEzETH250424PriceProviderEth is PendleEzETHPriceProvider {\\n    address public constant EZETH = 0xbf5495Efe5DB9ce00f80364C8B423567e58d2110;\\n\\n    constructor(IPriceProvidersRepository _priceProvidersRepository) PendlePriceProvider(\\n        0x66a1096C6366b2529274dF4f5D8247827fe4CEA8, // PT Oracle\\n        1800, // twap duration\\n        0xDe715330043799D7a80249660d1e6b61eB3713B3, // PT Market\\n        _priceProvidersRepository,\\n        0xeEE8aED1957ca1545a0508AfB51b53cCA7e3c0d1, // PT Token\\n        \\\"PT-ezETH-25APR2024\\\" // PT token symbol\\n    ) {}\\n\\n    function ezETH() public pure override returns (address asset) {\\n        asset = EZETH;\\n    }\\n}\\n\",\"keccak256\":\"0x165a71868e9d1981c70aeeed9c82a63f73a951720db3e940d4bf48b0e38d8d97\",\"license\":\"BUSL-1.1\"},\"contracts/priceProviders/pendleTokens/PendleEzETHPriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"./PendlePriceProvider.sol\\\";\\n\\nabstract contract PendleEzETHPriceProvider is PendlePriceProvider {\\n    function getPrice(address _asset) public view virtual returns (uint256 price) {\\n        if (!assetSupported(_asset)) revert AssetNotSupported();\\n\\n        // Pendle PT-ezETH-..../ezETH conversion rate\\n        uint256 ratePRtoEZETH = getPtToSyRate(twapDuration);\\n\\n        // RedStone ezETH/ETH conversion rate\\n        uint256 rateEZETHtoETH = priceProvidersRepository.getPrice(ezETH());\\n\\n        price = ratePRtoEZETH * rateEZETHtoETH;\\n        unchecked { price = price / 1e18; }\\n\\n        // Zero price is unacceptable\\n        if (price == 0) revert ZeroPrice();\\n    }\\n\\n    function ezETH() public pure virtual returns (address asset) {}\\n}\\n\",\"keccak256\":\"0x4440a45ccd8fc3edba44f7f21eb6bb8528921621d6fbd868bdae3842f6385c14\",\"license\":\"BUSL-1.1\"},\"contracts/priceProviders/pendleTokens/PendlePriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"../IndividualPriceProvider.sol\\\";\\nimport \\\"./interfaces/IPPtOracle.sol\\\";\\n\\n/// @title Pendle token price provider\\n/// @dev https://docs.pendle.finance/Developers/Integration/PTOracle\\nabstract contract PendlePriceProvider is IndividualPriceProvider {\\n    // solhint-disable\\n    address public immutable PT_ORACLE;\\n    address public immutable MARKET;\\n    // solhint-enable\\n\\n    uint32 public twapDuration;\\n\\n    event TwapDurationUpdated(uint256 twapDuration);\\n\\n    error OracleNotReady(bool increaseCardinalityRequired, bool oldestObservationSatisfied);\\n    error AssetNotSupported();\\n    error ZeroPrice();\\n\\n    constructor(\\n        address _ptOracle,\\n        uint32 _twapDuration,\\n        address _market,\\n        IPriceProvidersRepository _priceProvidersRepository,\\n        address _asset,\\n        string memory _symbol\\n    ) IndividualPriceProvider(\\n        _priceProvidersRepository,\\n        _asset,\\n        _symbol\\n    )\\n    {\\n        PT_ORACLE = _ptOracle;\\n        MARKET = _market;\\n\\n        _updateTwapDuration(_twapDuration);\\n    }\\n\\n    /// @notice Allow's to update a TWAP duration\\n    /// @param _newTwapDuration The new TWAP duration that should be used in the price provider\\n    function setTwapDuration(uint32 _newTwapDuration) external virtual onlyManager() {\\n        _updateTwapDuration(_newTwapDuration);\\n    }\\n\\n    /// @notice Resolve oracle state\\n    function getOracleState(uint32 _newTwapDuration)\\n        public\\n        view\\n        virtual\\n        returns (bool increaseCardinalityRequired, bool oldestObservationSatisfied)\\n    {\\n        (increaseCardinalityRequired, ,oldestObservationSatisfied) = IPPtOracle(PT_ORACLE)\\n            .getOracleState(MARKET, _newTwapDuration);\\n    }\\n\\n    /// @notice Get PT to asset rate\\n    function getPtToSyRate(uint32 _twapDuration) public view virtual returns (uint256 ratePRtoEETH) {\\n        ratePRtoEETH = IPPtOracle(PT_ORACLE).getPtToSyRate(MARKET, _twapDuration);\\n    }\\n\\n    /// @notice Update a TWAP duration\\n    /// @param _newTwapDuration The new TWAP duration that should be used in the price provider\\n    function _updateTwapDuration(uint32 _newTwapDuration) internal {\\n        (bool increaseCardinalityRequired, bool oldestObservationSatisfied) = getOracleState(_newTwapDuration);\\n\\n        if (increaseCardinalityRequired || !oldestObservationSatisfied) {\\n            revert OracleNotReady(increaseCardinalityRequired, oldestObservationSatisfied);\\n        }\\n\\n        twapDuration = _newTwapDuration;\\n\\n        emit TwapDurationUpdated(_newTwapDuration);\\n    }\\n}\\n\",\"keccak256\":\"0x9a3d1215a11a9ee63dcd300b35ecabbd83f6ee4517088c32cddf0aa9fc948495\",\"license\":\"BUSL-1.1\"},\"contracts/priceProviders/pendleTokens/interfaces/IPPtOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\ninterface IPPtOracle {\\n    event SetBlockCycleNumerator(uint16 newBlockCycleNumerator);\\n\\n    function getPtToAssetRate(\\n        address market,\\n        uint32 duration\\n    ) external view returns (uint256 ptToAssetRate);\\n\\n    function getPtToSyRate(\\n        address market,\\n        uint32 duration\\n    ) external view returns (uint256 ptToAssetRate);\\n\\n    function getOracleState(\\n        address market,\\n        uint32 duration\\n    )\\n        external\\n        view\\n        returns (\\n            bool increaseCardinalityRequired,\\n            uint16 cardinalityRequired,\\n            bool oldestObservationSatisfied\\n        );\\n}\\n\",\"keccak256\":\"0xf97c82ba3ee7bfe022fce900756d110cc5650dd492e59cc4950033758ea024b7\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x6101206040523480156200001257600080fd5b506040516200157a3803806200157a833981016040819052620000359162000633565b7366a1096c6366b2529274df4f5d8247827fe4cea861070873de715330043799d7a80249660d1e6b61eb3713b38373eee8aed1957ca1545a0508afb51b53cca7e3c0d16040518060400160405280601281526020017114150b595e9155120b4c8d5054148c8c0c8d60721b81525082828282620000cb816001600160a01b031663eec3e6a76200025560201b620006b91760201c565b6200011d5760405162461bcd60e51b815260206004820152601e60248201527f496e76616c6964507269636550726f76696465725265706f7369746f7279000060448201526064015b60405180910390fd5b6001600160a01b038116608081905260408051630217a4b760e41b8152905163217a4b70916004808201926020929091908290030181865afa15801562000168573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200018e919062000633565b6001600160a01b031660a05250604051620001ae90829060200162000686565b60405160208183030381529060405280519060200120620001da83620002df60201b6200073f1760201c565b604051602001620001ec919062000686565b60405160208183030381529060405280519060200120146200022157604051630ccd248560e21b815260040160405180910390fd5b506001600160a01b0390811660c05287811660e05285166101005250620002488562000393565b5050505050505062000882565b60006001600160a01b03831615801590620002d8575082826040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200029d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c39190620006bb565b60e083901b6001600160e01b03199081169116145b9392505050565b6040805160048152602481019091526020810180516001600160e01b039081166395d89b4160e01b17909152606091600091829162000322918691906200042c16565b915091508115806200033357508051155b15620003595750506040805180820190915260018152603f60f81b602082015292915050565b602081510362000376576200036e81620004fb565b949350505050565b808060200190518101906200036e9190620006fd565b5050919050565b600080620003a18362000585565b915091508180620003b0575080155b15620003dc5760405163685ddbe760e11b81528215156004820152811515602482015260440162000114565b6000805463ffffffff191663ffffffff85169081179091556040519081527fd82b20bed317f4f38777ecc650568940cbd210b15af84857f885373342a3d6fa9060200160405180910390a1505050565b6000606062000446846200061460201b620007de1760201c565b62000464576040516373d39f9d60e01b815260040160405180910390fd5b600080856001600160a01b031685604051620004819190620007b5565b600060405180830381855afa9150503d8060008114620004be576040519150601f19603f3d011682016040523d82523d6000602084013e620004c3565b606091505b509150915081620004ec57600060405180602001604052806000815250935093505050620004f4565b600193509150505b9250929050565b805160609060005b818110156200038c57838181518110620005215762000521620007d3565b01602001516001600160f81b031916156200057c57828482815181106200054c576200054c620007d3565b602001015160f81c60f81b6040516020016200056a929190620007e9565b60405160208183030381529060405292505b60010162000503565b60e0516101005160405162439f4b60e91b81526001600160a01b03918216600482015263ffffffff841660248201526000928392169063873e960090604401606060405180830381865afa158015620005e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000608919062000830565b91959194509092505050565b3b151590565b6001600160a01b03811681146200063057600080fd5b50565b6000602082840312156200064657600080fd5b8151620002d8816200061a565b60005b838110156200067057818101518382015260200162000656565b8381111562000680576000848401525b50505050565b6020815260008251806020840152620006a781604085016020870162000653565b601f01601f19169190910160400192915050565b600060208284031215620006ce57600080fd5b81516001600160e01b031981168114620002d857600080fd5b634e487b7160e01b600052604160045260246000fd5b6000602082840312156200071057600080fd5b81516001600160401b03808211156200072857600080fd5b818401915084601f8301126200073d57600080fd5b815181811115620007525762000752620006e7565b604051601f8201601f19908116603f011681019083821181831017156200077d576200077d620006e7565b816040528281528760208487010111156200079757600080fd5b620007aa83602083016020880162000653565b979650505050505050565b60008251620007c981846020870162000653565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b60008351620007fd81846020880162000653565b6001600160f81b0319939093169190920190815260010192915050565b805180151581146200082b57600080fd5b919050565b6000806000606084860312156200084657600080fd5b62000851846200081a565b9250602084015161ffff811681146200086957600080fd5b915062000879604085016200081a565b90509250925092565b60805160a05160c05160e05161010051610c7b620008ff600039600081816102db01528181610313015261052e01526000818161024f0152818161034c01526105650152600081816101be0152818161028101526103c7015260006101270152600081816102150152818161043301526105e40152610c7b6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806358fe922d1161008c578063809d7b3111610066578063809d7b311461024a578063b31fb25614610271578063c433c80a146102c1578063f46f16c2146102d657600080fd5b806358fe922d146101f55780635ddf2be3146102105780637b1d10891461023757600080fd5b8063284ada3e116100c8578063284ada3e1461016e57806341976e09146101985780634800d97f146101b957806357e0c50f146101e057600080fd5b806313a73c78146100ef578063217a4b701461012257806326d8954514610149575b600080fd5b73bf5495efe5db9ce00f80364c8b423567e58d21105b6040516001600160a01b0390911681526020015b60405180910390f35b6101057f000000000000000000000000000000000000000000000000000000000000000081565b6000546101599063ffffffff1681565b60405163ffffffff9091168152602001610119565b61018161017c3660046109ab565b6102fd565b604080519215158352901515602083015201610119565b6101ab6101a63660046109e6565b6103c3565b604051908152602001610119565b6101057f000000000000000000000000000000000000000000000000000000000000000081565b6040516357e0c50f60e01b8152602001610119565b61010573bf5495efe5db9ce00f80364c8b423567e58d211081565b6101057f000000000000000000000000000000000000000000000000000000000000000081565b6101ab6102453660046109ab565b610517565b6101057f000000000000000000000000000000000000000000000000000000000000000081565b6102b161027f3660046109e6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6040519015158152602001610119565b6102d46102cf3660046109ab565b6105d8565b005b6101057f000000000000000000000000000000000000000000000000000000000000000081565b60405162439f4b60e91b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015263ffffffff8316602483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063873e960090604401606060405180830381865afa158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b79190610a18565b91959194509092505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03908116908316146104125760405163981a2a2b60e01b815260040160405180910390fd5b600080546104259063ffffffff16610517565b905060006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166341976e0973bf5495efe5db9ce00f80364c8b423567e58d21106040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d59190610a64565b90506104e18183610a7d565b670de0b6b3a764000090049250600083900361051057604051634dfba02360e01b815260040160405180910390fd5b5050919050565b60405163a31426d160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015263ffffffff831660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a31426d190604401602060405180830381865afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190610a64565b92915050565b336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663481c6a756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106649190610aaa565b6001600160a01b0316146106ad5760405162461bcd60e51b815260206004820152600b60248201526a27b7363ca6b0b730b3b2b960a91b60448201526064015b60405180910390fd5b6106b6816107e4565b50565b60006001600160a01b03831615801590610738575082826040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107239190610ac7565b60e083901b6001600160e01b03199081169116145b9392505050565b6040805160048152602481019091526020810180516001600160e01b03166395d89b4160e01b179052606090600090819061077b908590610878565b9150915081158061078b57508051155b156107b05750506040805180820190915260018152603f60f81b602082015292915050565b60208151036107ca576107c28161092c565b949350505050565b808060200190518101906107c29190610b37565b3b151590565b6000806107f0836102fd565b9150915081806107fe575080155b156108285760405163685ddbe760e11b8152821515600482015281151560248201526044016106a4565b6000805463ffffffff191663ffffffff85169081179091556040519081527fd82b20bed317f4f38777ecc650568940cbd210b15af84857f885373342a3d6fa9060200160405180910390a1505050565b60006060833b61089b576040516373d39f9d60e01b815260040160405180910390fd5b600080856001600160a01b0316856040516108b69190610be4565b600060405180830381855afa9150503d80600081146108f1576040519150601f19603f3d011682016040523d82523d6000602084013e6108f6565b606091505b50915091508161091d57600060405180602001604052806000815250935093505050610925565b600193509150505b9250929050565b805160609060005b818110156105105783818151811061094e5761094e610c00565b01602001516001600160f81b031916156109a3578284828151811061097557610975610c00565b602001015160f81c60f81b604051602001610991929190610c16565b60405160208183030381529060405292505b600101610934565b6000602082840312156109bd57600080fd5b813563ffffffff8116811461073857600080fd5b6001600160a01b03811681146106b657600080fd5b6000602082840312156109f857600080fd5b8135610738816109d1565b80518015158114610a1357600080fd5b919050565b600080600060608486031215610a2d57600080fd5b610a3684610a03565b9250602084015161ffff81168114610a4d57600080fd5b9150610a5b60408501610a03565b90509250925092565b600060208284031215610a7657600080fd5b5051919050565b6000816000190483118215151615610aa557634e487b7160e01b600052601160045260246000fd5b500290565b600060208284031215610abc57600080fd5b8151610738816109d1565b600060208284031215610ad957600080fd5b81516001600160e01b03198116811461073857600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b83811015610b22578181015183820152602001610b0a565b83811115610b31576000848401525b50505050565b600060208284031215610b4957600080fd5b815167ffffffffffffffff80821115610b6157600080fd5b818401915084601f830112610b7557600080fd5b815181811115610b8757610b87610af1565b604051601f8201601f19908116603f01168101908382118183101715610baf57610baf610af1565b81604052828152876020848701011115610bc857600080fd5b610bd9836020830160208801610b07565b979650505050505050565b60008251610bf6818460208701610b07565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b60008351610c28818460208801610b07565b6001600160f81b031993909316919092019081526001019291505056fea26469706673582212203497183f73a81a7b4bb4a0a886ec8f5adf442b51ae207bb02744a80c745db1e564736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806358fe922d1161008c578063809d7b3111610066578063809d7b311461024a578063b31fb25614610271578063c433c80a146102c1578063f46f16c2146102d657600080fd5b806358fe922d146101f55780635ddf2be3146102105780637b1d10891461023757600080fd5b8063284ada3e116100c8578063284ada3e1461016e57806341976e09146101985780634800d97f146101b957806357e0c50f146101e057600080fd5b806313a73c78146100ef578063217a4b701461012257806326d8954514610149575b600080fd5b73bf5495efe5db9ce00f80364c8b423567e58d21105b6040516001600160a01b0390911681526020015b60405180910390f35b6101057f000000000000000000000000000000000000000000000000000000000000000081565b6000546101599063ffffffff1681565b60405163ffffffff9091168152602001610119565b61018161017c3660046109ab565b6102fd565b604080519215158352901515602083015201610119565b6101ab6101a63660046109e6565b6103c3565b604051908152602001610119565b6101057f000000000000000000000000000000000000000000000000000000000000000081565b6040516357e0c50f60e01b8152602001610119565b61010573bf5495efe5db9ce00f80364c8b423567e58d211081565b6101057f000000000000000000000000000000000000000000000000000000000000000081565b6101ab6102453660046109ab565b610517565b6101057f000000000000000000000000000000000000000000000000000000000000000081565b6102b161027f3660046109e6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6040519015158152602001610119565b6102d46102cf3660046109ab565b6105d8565b005b6101057f000000000000000000000000000000000000000000000000000000000000000081565b60405162439f4b60e91b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015263ffffffff8316602483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063873e960090604401606060405180830381865afa158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b79190610a18565b91959194509092505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03908116908316146104125760405163981a2a2b60e01b815260040160405180910390fd5b600080546104259063ffffffff16610517565b905060006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166341976e0973bf5495efe5db9ce00f80364c8b423567e58d21106040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d59190610a64565b90506104e18183610a7d565b670de0b6b3a764000090049250600083900361051057604051634dfba02360e01b815260040160405180910390fd5b5050919050565b60405163a31426d160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015263ffffffff831660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a31426d190604401602060405180830381865afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190610a64565b92915050565b336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663481c6a756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106649190610aaa565b6001600160a01b0316146106ad5760405162461bcd60e51b815260206004820152600b60248201526a27b7363ca6b0b730b3b2b960a91b60448201526064015b60405180910390fd5b6106b6816107e4565b50565b60006001600160a01b03831615801590610738575082826040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107239190610ac7565b60e083901b6001600160e01b03199081169116145b9392505050565b6040805160048152602481019091526020810180516001600160e01b03166395d89b4160e01b179052606090600090819061077b908590610878565b9150915081158061078b57508051155b156107b05750506040805180820190915260018152603f60f81b602082015292915050565b60208151036107ca576107c28161092c565b949350505050565b808060200190518101906107c29190610b37565b3b151590565b6000806107f0836102fd565b9150915081806107fe575080155b156108285760405163685ddbe760e11b8152821515600482015281151560248201526044016106a4565b6000805463ffffffff191663ffffffff85169081179091556040519081527fd82b20bed317f4f38777ecc650568940cbd210b15af84857f885373342a3d6fa9060200160405180910390a1505050565b60006060833b61089b576040516373d39f9d60e01b815260040160405180910390fd5b600080856001600160a01b0316856040516108b69190610be4565b600060405180830381855afa9150503d80600081146108f1576040519150601f19603f3d011682016040523d82523d6000602084013e6108f6565b606091505b50915091508161091d57600060405180602001604052806000815250935093505050610925565b600193509150505b9250929050565b805160609060005b818110156105105783818151811061094e5761094e610c00565b01602001516001600160f81b031916156109a3578284828151811061097557610975610c00565b602001015160f81c60f81b604051602001610991929190610c16565b60405160208183030381529060405292505b600101610934565b6000602082840312156109bd57600080fd5b813563ffffffff8116811461073857600080fd5b6001600160a01b03811681146106b657600080fd5b6000602082840312156109f857600080fd5b8135610738816109d1565b80518015158114610a1357600080fd5b919050565b600080600060608486031215610a2d57600080fd5b610a3684610a03565b9250602084015161ffff81168114610a4d57600080fd5b9150610a5b60408501610a03565b90509250925092565b600060208284031215610a7657600080fd5b5051919050565b6000816000190483118215151615610aa557634e487b7160e01b600052601160045260246000fd5b500290565b600060208284031215610abc57600080fd5b8151610738816109d1565b600060208284031215610ad957600080fd5b81516001600160e01b03198116811461073857600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b83811015610b22578181015183820152602001610b0a565b83811115610b31576000848401525b50505050565b600060208284031215610b4957600080fd5b815167ffffffffffffffff80821115610b6157600080fd5b818401915084601f830112610b7557600080fd5b815181811115610b8757610b87610af1565b604051601f8201601f19908116603f01168101908382118183101715610baf57610baf610af1565b81604052828152876020848701011115610bc857600080fd5b610bd9836020830160208801610b07565b979650505050505050565b60008251610bf6818460208701610b07565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b60008351610c28818460208801610b07565b6001600160f81b031993909316919092019081526001019291505056fea26469706673582212203497183f73a81a7b4bb4a0a886ec8f5adf442b51ae207bb02744a80c745db1e564736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "assetSupported(address)": {
        "params": {
          "_asset": "address of an asset"
        }
      },
      "getPrice(address)": {
        "params": {
          "_asset": "address of an asset for which to read price"
        },
        "returns": {
          "price": "of asses with 18 decimals, throws when pool is not ready yet to provide price"
        }
      },
      "priceProviderPing()": {
        "details": "this can save us from simple human errors, in case we use invalid address but this should NOT be treated as security check",
        "returns": {
          "_0": "always true"
        }
      },
      "setTwapDuration(uint32)": {
        "params": {
          "_newTwapDuration": "The new TWAP duration that should be used in the price provider"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "assetSupported(address)": {
        "notice": "Only ASSET token is supported, false otherwise."
      },
      "getOracleState(uint32)": {
        "notice": "Resolve oracle state"
      },
      "getPrice(address)": {
        "notice": "Returns \"Time-Weighted Average Price\" for an asset. Calculates TWAP price for quote/asset. It unifies all tokens decimal to 18, examples: - if asses == quote it returns 1e18 - if asset is USDC and quote is ETH and ETH costs ~$3300 then it returns ~0.0003e18 WETH per 1 USDC"
      },
      "getPtToSyRate(uint32)": {
        "notice": "Get PT to asset rate"
      },
      "priceProviderPing()": {
        "notice": "Helper method that allows easily detects, if contract is PriceProvider"
      },
      "priceProvidersRepository()": {
        "notice": "PriceProvidersRepository address"
      },
      "quoteToken()": {
        "notice": "Token address which prices are quoted in. Must be the same as PriceProvidersRepository.quoteToken"
      },
      "setTwapDuration(uint32)": {
        "notice": "Allow's to update a TWAP duration"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1133,
        "contract": "contracts/priceProviders/pendleTokens/PendleEzETH250424PriceProviderEth.sol:PendleEzETH250424PriceProviderEth",
        "label": "twapDuration",
        "offset": 0,
        "slot": "0",
        "type": "t_uint32"
      }
    ],
    "types": {
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}